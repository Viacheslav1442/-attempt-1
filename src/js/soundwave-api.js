import axios from 'axios';
import iziToast from 'izitoast';
import 'izitoast/dist/css/iziToast.min.css';

// üîÑ –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–æ–º
function showLoader() {
  document.body.classList.add('loading');
}

function hideLoader() {
  document.body.classList.remove('loading');
}

// üì¶ Axios instance
const api = axios.create({
  baseURL: 'https://sound-wave.b.goit.study/api',
  timeout: 5000,
  headers: {
    'Content-Type': 'application/json',
  },
});

// ‚ûï Interceptors ‚Äî –ø–æ–∫–∞–∑ –ª–æ–∞–¥–µ—Ä–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Ç–æ–º
api.interceptors.request.use(
  config => {
    showLoader();
    return config;
  },
  error => {
    hideLoader();
    return Promise.reject(error);
  }
);

// ‚ûñ Interceptors ‚Äî –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –ª–æ–∞–¥–µ—Ä–∞ –ø—ñ—Å–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ/–ø–æ–º–∏–ª–∫–∏
api.interceptors.response.use(
  response => {
    hideLoader();
    return response;
  },
  error => {
    hideLoader();
    iziToast.error({
      title: '–ü–æ–º–∏–ª–∫–∞',
      message: '–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ —Å–µ—Ä–≤–µ—Ä–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.',
      position: 'topRight',
    });
    return Promise.reject(error);
  }
);

// ========== –§—É–Ω–∫—Ü—ñ—ó –∑–∞–ø–∏—Ç—ñ–≤ ==========

export async function fetchArtists() {
  const response = await api.get('/artists');
  return response.data;
}

export async function fetchArtistById(id) {
  const response = await api.get(`/artists/${id}`);
  return response.data;
}

export async function fetchReviews() {
  const response = await api.get('/reviews');
  return response.data;
}
