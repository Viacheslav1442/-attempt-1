{"version":3,"file":"index.js","sources":["../src/js/artist-section.js","../src/main.js"],"sourcesContent":["const API_URL = 'https://sound-wave.b.goit.study/api';\n// Початкове зміщення для завантаження даних (для клієнтської пагінації)\nlet offset = 0;\n// Кількість елементів, що відображаються за один раз\nconst limit = 8;\n// Масив для зберігання всіх завантажених артистів з API\nlet allArtists = [];\n\n// Посилання на елементи DOM (будуть ініціалізовані в initArtistSection)\nlet artistsContainer;\nlet loadMoreBtn;\nlet modal;\nlet modalContent;\nlet closeModal;\n\n/**\n * Створює та повертає DOM-елемент картки виконавця.\n * Ця функція повністю уникає використання innerHTML для динамічного контенту,\n * створюючи всі елементи програмно.\n * @param {object} artist - Об'єкт з даними виконавця (фото, ім'я, жанри, коротка інформація, опис).\n * @returns {HTMLElement} - Створений елемент 'div' для картки.\n */\nfunction createCard(artist) {\n    const card = document.createElement('div');\n    card.className = 'artist-card';\n\n    const img = document.createElement('img');\n    img.src = artist.photo;\n    img.alt = artist.name;\n    img.addEventListener('error', function () {\n        this.src = 'https://placehold.co/150x150/cccccc/333333?text=No+Image';\n        this.alt = 'No Image Available';\n    });\n    card.appendChild(img);\n\n    const h3 = document.createElement('h3');\n    h3.textContent = artist.name;\n    card.appendChild(h3);\n\n    const genresP = document.createElement('p');\n    const genresStrong = document.createElement('strong');\n    genresStrong.textContent = 'Genres: ';\n    genresP.appendChild(genresStrong);\n    genresP.append(artist.genres && artist.genres.length > 0 ? artist.genres.join(', ') : 'N/A');\n    card.appendChild(genresP);\n\n    const shortInfoP = document.createElement('p');\n    shortInfoP.textContent = artist.shortInfo || 'No short info available.';\n    card.appendChild(shortInfoP);\n\n    const learnMoreButton = document.createElement('button');\n    learnMoreButton.className = 'learn-more-btn';\n    learnMoreButton.textContent = 'Learn More';\n    learnMoreButton.addEventListener('click', () => {\n        showModal(artist);\n    });\n    card.appendChild(learnMoreButton);\n\n    return card;\n}\n\n/**\n * Відображає модальне вікно з детальною інформацією про виконавця.\n * Ця функція повністю уникає innerHTML для очищення та додавання контенту.\n * @param {object} artist - Об'єкт з даними виконавця для відображення.\n */\nfunction showModal(artist) {\n    // Очищаємо вміст перед додаванням нового, повністю уникаючи innerHTML\n    while (modalContent.firstChild) {\n        modalContent.removeChild(modalContent.firstChild);\n    }\n\n    const modalTitle = document.createElement('h2');\n    modalTitle.textContent = artist.name;\n    modalContent.appendChild(modalTitle);\n\n    const genresP = document.createElement('p');\n    const genresStrong = document.createElement('strong');\n    genresStrong.textContent = 'Genres: ';\n    genresP.appendChild(genresStrong);\n    genresP.append(artist.genres && artist.genres.length > 0 ? artist.genres.join(', ') : 'N/A');\n    modalContent.appendChild(genresP);\n\n    const descriptionP = document.createElement('p');\n    descriptionP.textContent = artist.description || 'No detailed description available.';\n    modalContent.appendChild(descriptionP);\n\n    modal.style.display = 'flex'; // Робимо модальне вікно видимим\n}\n\n/**\n * Асинхронна функція для завантаження артистів з API та відображення їх.\n * Тепер API викликається лише один раз, а пагінація відбувається на клієнтській стороні.\n */\nasync function loadArtistsDataAndDisplay() {\n    try {\n        if (offset === 0) { // Виконуємо запит до API тільки при першому завантаженні\n            console.log(`Sending initial request to: ${API_URL}/artists`);\n            // *** КЛЮЧОВЕ ВИПРАВЛЕННЯ: ЗАПИТ БЕЗ ПАРАМЕТРІВ OFFSET/LIMIT ***\n            const response = await axios.get(`${API_URL}/artists`);\n\n            // Доступ до масиву артистів через .artists\n            const data = response.data.artists;\n\n            // Перевіряємо, чи отримані дані є масивом\n            if (!Array.isArray(data)) {\n                console.error('API response is not an array (after accessing .artists):', data);\n                loadMoreBtn.style.display = 'none';\n                return;\n            }\n            allArtists = data; // Зберігаємо всіх отриманих артистів\n        }\n\n        // Відображаємо артистів з масиву allArtists, використовуючи slice для пагінації на клієнті\n        const artistsToDisplay = allArtists.slice(offset, offset + limit);\n\n        // Додаємо кожну картку артиста до DOM\n        artistsToDisplay.forEach((artist) => {\n            const card = createCard(artist);\n            artistsContainer.appendChild(card);\n        });\n\n        // Збільшуємо зміщення для наступної порції\n        offset += limit;\n\n        // Приховуємо кнопку \"Load More\", якщо всі артисти були відображені\n        if (offset >= allArtists.length) {\n            loadMoreBtn.style.display = 'none';\n        } else {\n            loadMoreBtn.style.display = 'block'; // Робимо кнопку видимою, якщо є ще артисти\n        }\n\n    } catch (error) {\n        console.error('Axios error during artist loading:', error);\n\n        // Логуємо деталі відповіді на помилку, якщо вони доступні\n        if (axios.isAxiosError(error) && error.response) {\n            console.error('API Error Response Details:');\n            console.error('Status:', error.response.status);\n            console.error('Data:', error.response.data);\n            console.error('Headers:', error.response.headers);\n        } else if (error.request) {\n            // Запит був зроблений, але відповіді не було отримано\n            console.error('No response received from API for the request.');\n        } else {\n            // Щось пішло не так при налаштуванні запиту\n            console.error('Error setting up the request:', error.message);\n        }\n\n        loadMoreBtn.style.display = 'none'; // Приховуємо кнопку при помилці\n    }\n}\n\n/**\n * Ініціалізує секцію артистів: отримує елементи DOM та встановлює обробники подій.\n * Ця функція є точкою входу для модуля.\n */\nfunction initArtistSection() {\n    // Отримання посилань на елементи DOM за їх ID\n    artistsContainer = document.getElementById('artistsContainer');\n    loadMoreBtn = document.getElementById('loadMoreBtn');\n    modal = document.getElementById('modal');\n    modalContent = document.getElementById('modalContent');\n    closeModal = document.getElementById('closeModal');\n\n    // Обробник події для кнопки закриття модального вікна ('x')\n    closeModal.onclick = () => {\n        modal.style.display = 'none'; // Приховуємо модальне вікно\n    };\n\n    // Обробник події для закриття модального вікна при кліку поза його межами\n    window.onclick = (e) => {\n        if (e.target === modal) {\n            modal.style.display = 'none'; // Приховуємо модальне вікно\n        }\n    };\n\n    // Прив'язуємо функцію loadArtistsDataAndDisplay до події 'click' на кнопці \"Load More\"\n    loadMoreBtn.onclick = loadArtistsDataAndDisplay;\n\n    // Завантажуємо першу порцію артистів при завантаженні сторінки\n    loadArtistsDataAndDisplay();\n}\n\n// Експортуємо функцію ініціалізації для використання в main.js\nexport { initArtistSection };\n","import { initArtistSection } from './js/artist-section.js'\n\n// Чекаємо, доки DOM буде повністю завантажений, перш ніж ініціалізувати додаток\ndocument.addEventListener('DOMContentLoaded', () => {\n    initArtistSection();\n});\n\n"],"names":["API_URL","offset","limit","allArtists","artistsContainer","loadMoreBtn","modal","modalContent","closeModal","createCard","artist","card","img","h3","genresP","genresStrong","shortInfoP","learnMoreButton","showModal","modalTitle","descriptionP","loadArtistsDataAndDisplay","data","error","initArtistSection"],"mappings":"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"}